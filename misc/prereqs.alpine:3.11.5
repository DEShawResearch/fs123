#!/bin/sh
set -eux
OPWD=`pwd -P`
cd `mktemp -d`

# Are these necessary?
# echo http://dl-cdn.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories
# echo http://dl-cdn.alpinelinux.org/alpine/edge/community >> /etc/apk/repositories
apk update
apk add --no-cache binutils make libgcc musl-dev gcc g++
apk add --no-cache bash
apk add --no-cache fuse-dev
apk add --no-cache libsodium-dev libsodium-static
apk add --no-cache curl curl-dev curl-static
apk add --no-cache util-linux
apk add --no-cache libevent-dev libevent-static
apk add --no-cache nghttp2-static openssl-libs-static zlib-static
apk add --no-cache attr
apk add --no-cache e2fsprogs
apk add --no-cache valgrind
apk add --no-cache python3
# Alpine's libc is libmusl, not glibc.  It doesn't have backtrace, so
# we have to jump through a few extra hoops to get stacktrace.hpp and
# backward.hpp to work.
apk add --no-cache libdwarf libdwarf-dev libdwarf-static elfutils-dev
export LDLIBS="-ldwarf -lelf"
export CPPFLAGS="-DBACKWARD_HAS_DWARF -I/usr/include/libdwarf -I/usr/include/libelf"
# This is sufficient to run make -f .../GNUmakefile check
# valgrind will report a couple of false positives.
#
# To build staticly, we need to compile static versions of libfuse.
wget https://github.com/libfuse/libfuse/releases/download/fuse-2.9.9/fuse-2.9.9.tar.gz -O- | tar xfz -
cd fuse-2.9.9
./configure --enable-shared=no
make -j install
cd ..

cd $OPWD
# It's now possible to do:
# LDFLAGS=-static make -f .../GNUmakefile

set +eux
