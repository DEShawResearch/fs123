#!/bin/bash

# Test the --cache-control-regex server-side argument.
#
# Assume that the server was started with:
#
# --max_age_long=20
# --max_age_short=3
# --stale_while_revalidate_long=10
# --stale_while_revalidate_short=3
# --cache-control-regex=max-age=55,stale-while-revalidate=44:max-age=33,stale-while-revalidate=22:.*\.dms
# --allow-unencrypted-requests
#

die(){
    1>&2 echo "$@"
    exit 1
}
trap 'echo 1>&2 $0: Exiting on ERR trap, line: $LINENO; exit 1' ERR

me=$(basename $0)

d=$(cd $EXPORT_ROOT && mktemp --directory --tmpdir=. $me.XXXXXX | sed 's@^./@@')
chmod a+rx $EXPORT_ROOT/$d
(cd $EXPORT_ROOT/$d; touch a.dms)

getcc(){
    curl -H Accept-encoding:fs123-secretbox -si "$1" | awk 'tolower($0) ~ /cache-control:/ { print tolower($2); }' | tr -d '[:space:]'
}

if grep -q -- ^--noallow-unencrypted-requests $RCroot/etc/fs123p7exportd/fs123p7exportd.gflags ; then
    echo This test can only run if the server is configured with --allow-unencrypted-requests.  It is not.  Bye.
    exit 0
fi

# Let's just use curl 
set -x
baseurl=http://localhost:$SERVPORT/fs123/7/1
[ "$(getcc $baseurl/a/$d/a.dms)" = "public,max-age=55,stale-while-revalidate=44" ]
[ "$(getcc $baseurl/a/$d/b.dms)" = "public,max-age=33,stale-while-revalidate=22" ]
[ "$(getcc $baseurl/a/xyzzy.dms)" = "public,max-age=33,stale-while-revalidate=22" ]
[ "$(getcc $baseurl/a/$d/xyzzy)" = "public,max-age=3,stale-while-revalidate=3" ]
