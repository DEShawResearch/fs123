#!/bin/bash

# Test the --decentralized-cache-control rules
#
# Assume that the server was started with:
#
# --max_age_long=20
# --max_age_short=3
# --stale_while_revalidate_long=10
# --stale_while_revalidate_short=3
# --cache-control-regex=max-age=55,stale-while-revalidate=44:max-age=33,stale-while-revalidate=22:.*\.dms
# --decentralized-cache-control
# --allow-unencrypted-requests
#

die(){
    1>&2 echo "$@"
    exit 1
}
trap 'echo 1>&2 $0: Exiting on ERR trap, line: $LINENO; exit 1' ERR

if grep -q -- ^--noallow-unencrypted-requests $RCroot/etc/fs123p7exportd/fs123p7exportd.gflags ; then
    echo This test can only run if the server is configured with --allow-unencrypted-requests.  It is not.  Bye.
    exit 0
fi

me=$(basename $0)

# Let's make sure that ls works too...
d=$(cd $EXPORT_ROOT && mktemp -d -p. $me.XXXXXX | sed 's@^./@@')
chmod a+rx $EXPORT_ROOT/$d
(cd $EXPORT_ROOT/$d; touch a.dms)

getcc(){
    curl -H Accept-encoding:fs123-secretbox -si "$1" | awk 'tolower($0) ~ /cache-control:/ { print $2; }' | tr -d '[:space:]'
}

getstatus(){
    curl -H Accept-encoding:fs123-secretbox -si "$1" | awk '/HTTP/{print $2}'
}

# Use curl to get the cache-control headers rather than trying to reverse-engineer
# them from client-side behavior.

# Our cc-rules files have non-standard cache-control headers that
# contain identifiable "cookies".  They're not meaningful to proxies,
# but we're not using proxies, and they shouldn't do any harm.

create_ccfile()(
    tag=$1
    cd $EXPORT_ROOT
    mkdir -p $tag 2>/dev/null || :
    cat > $tag/.fs123_cc_rules <<EOF
   {
    "rulesfile-maxage": 2,
    "re-rules": [
       { "re": ".*\\\\.stk"  ,  "cc": "$tag,re-stk"},
       { "re": ".*\\\\.ark"  ,  "cc": "$tag,re-ark"}
     ],
    "cc": "$tag,nomatch"
   }
EOF
    )

set -x

create_ccfile $d
create_ccfile $d/a/b

baseurl=http://localhost:$SERVPORT/fs123/7

[ "$(getcc $baseurl/a/$d)" = "$d,nomatch" ]
[ "$(getcc $baseurl/a/$d/a/b/c)" = "$d/a/b,nomatch" ]
[ "$(getcc $baseurl/a/$d/a/b/c.ark)" = "$d/a/b,re-ark" ]
[ "$(getcc $baseurl/a/$d/a/b/c.ark/d)" = "$d/a/b,nomatch" ]
# Tweak a/b/.fs123_cc_rules so it violates the schema
# and try again.  We should still "see" the rules file
# at $d/.fs123_cc_rules:
sed -i.bak s/cc/dd/ $EXPORT_ROOT/$d/a/b/.fs123_cc_rules
sleep 2
[ $(getstatus "$baseurl/a/$d/a/b/c.ark") == 200 ]
[ $(getstatus "$baseurl/a/$d/a/b/c.ark/d") == 200 ]
[ "$(getcc $baseurl/a/$d/a/b/c.ark)" = "$d,re-ark" ]
[ "$(getcc $baseurl/a/$d/a/b/c.ark/d)" = "$d,nomatch" ]
# Tweak it again so it isn't even valid json
sed -i.bak s/,/,,/ $EXPORT_ROOT/$d/a/b/.fs123_cc_rules
sleep 2
[ "$(getcc $baseurl/a/$d/a/b/c.ark)" = "$d,re-ark" ]
[ "$(getcc $baseurl/a/$d/a/b/c.ark/d)" = "$d,nomatch" ]

rm $EXPORT_ROOT/$d/.fs123_cc_rules
[ "$(getcc $baseurl/a/$d)" = "$d,nomatch" ]
sleep 2
[ "$(getcc $baseurl/a/$d)" = "public,max-age=3,stale-while-revalidate=3" ]

